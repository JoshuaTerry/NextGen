namespace DDI.Data.Migrations.Client
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class AddingConcurrency : DbMigration
    {
        public override void Up()
        {
            DropForeignKey("dbo.FiscalPeriod", "FiscalYearId", "dbo.FiscalYear");
            DropIndex("dbo.FiscalPeriod", "IX_FiscalYear_PeriodNumber");
            AlterColumn("dbo.FiscalPeriod", "FiscalYearId", c => c.Guid(nullable: false));
            CreateIndex("dbo.FiscalPeriod", new[] { "FiscalYearId", "PeriodNumber" }, unique: true, name: "IX_FiscalYear_PeriodNumber");
            AddForeignKey("dbo.FiscalPeriod", "FiscalYearId", "dbo.FiscalYear", "Id", cascadeDelete: true);

            AddColumn("dbo.Attachment", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.FileStorage", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Note", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.NoteCategory", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.NoteContactMethod", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.NoteCode", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.NoteTopic", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AlternateId", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ClergyStatus", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ClergyType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ConstituentAddress", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Address", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Region", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.RegionArea", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AddressType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ConstituentStatus", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ConstituentType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Tag", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.TagGroup", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ContactInfo", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ContactType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ContactCategory", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Denomination", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.DoingBusinessAs", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.EducationLevel", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Education", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Degree", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.School", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Ethnicity", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Gender", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.IncomeLevel", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            //AddColumn("dbo.InvestmentRelationship", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            //AddColumn("dbo.Investment", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.BusinessUnit", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.BusinessUnitFromTo", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.FiscalYear", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.FiscalPeriod", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Ledger", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.LedgerAccount", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.LedgerAccountYear", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Account", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AccountSegment", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Segment", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.SegmentLevel", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AccountBudget", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AccountGroup", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AccountPriorYear", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.PostedTransaction", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Transaction", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.EntityTransaction", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            //AddColumn("dbo.InvestmentInterestPayout", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            //AddColumn("dbo.InvestmentOwnershipType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            //AddColumn("dbo.InvestmentType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Language", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.MaritialStatus", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.PaymentMethod", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.EFTFormat", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Prefix", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Profession", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Relationship", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.RelationshipType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.RelationshipCategory", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Configuration", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.BankAccount", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.DisbursementLine", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Disbursement", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.MiscReceiptLine", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.MiscReceipt", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ReceiptBatch", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ReceiptBatchType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Receipt", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ReceiptType", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.ConstituentPicture", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.RegionLevel", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.CustomField", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.CustomFieldData", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.CustomFieldOption", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.EntityApproval", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.EntityMapping", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.EntityNumber", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.AccountClose", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.FundFromTo", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Fund", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            
            AddColumn("dbo.JournalLine", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.Journal", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.LedgerAccountMerge", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.SavedEntityMapping", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.SavedEntityMappingField", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            AddColumn("dbo.SectionPreference", "RowVersion", c => c.Binary(nullable: false, fixedLength: true, timestamp: true, storeType: "rowversion"));
            
        }
        
        public override void Down()
        {
            DropForeignKey("dbo.FiscalPeriod", "FiscalYearId", "dbo.FiscalYear");
            DropIndex("dbo.FiscalPeriod", "IX_FiscalYear_PeriodNumber");
            AlterColumn("dbo.FiscalPeriod", "FiscalYearId", c => c.Guid());
            DropColumn("dbo.SectionPreference", "RowVersion");
            DropColumn("dbo.SavedEntityMappingField", "RowVersion");
            DropColumn("dbo.SavedEntityMapping", "RowVersion");
            DropColumn("dbo.LedgerAccountMerge", "RowVersion");
            DropColumn("dbo.Journal", "RowVersion");
            DropColumn("dbo.JournalLine", "RowVersion");
            
            DropColumn("dbo.Fund", "RowVersion");
            DropColumn("dbo.FundFromTo", "RowVersion");
            DropColumn("dbo.AccountClose", "RowVersion");
            DropColumn("dbo.EntityNumber", "RowVersion");
            DropColumn("dbo.EntityMapping", "RowVersion");
            DropColumn("dbo.EntityApproval", "RowVersion");
            DropColumn("dbo.CustomFieldOption", "RowVersion");
            DropColumn("dbo.CustomFieldData", "RowVersion");
            DropColumn("dbo.CustomField", "RowVersion");
            DropColumn("dbo.RegionLevel", "RowVersion");
            DropColumn("dbo.ConstituentPicture", "RowVersion");
            DropColumn("dbo.ReceiptType", "RowVersion");
            DropColumn("dbo.Receipt", "RowVersion");
            DropColumn("dbo.ReceiptBatchType", "RowVersion");
            DropColumn("dbo.ReceiptBatch", "RowVersion");
            DropColumn("dbo.MiscReceipt", "RowVersion");
            DropColumn("dbo.MiscReceiptLine", "RowVersion");
            DropColumn("dbo.Disbursement", "RowVersion");
            DropColumn("dbo.DisbursementLine", "RowVersion");
            DropColumn("dbo.BankAccount", "RowVersion");
            DropColumn("dbo.Configuration", "RowVersion");
            DropColumn("dbo.RelationshipCategory", "RowVersion");
            DropColumn("dbo.RelationshipType", "RowVersion");
            DropColumn("dbo.Relationship", "RowVersion");
            DropColumn("dbo.Profession", "RowVersion");
            DropColumn("dbo.Prefix", "RowVersion");
            DropColumn("dbo.EFTFormat", "RowVersion");
            DropColumn("dbo.PaymentMethod", "RowVersion");
            DropColumn("dbo.MaritialStatus", "RowVersion");
            DropColumn("dbo.Language", "RowVersion");
            //DropColumn("dbo.InvestmentType", "RowVersion");
            //DropColumn("dbo.InvestmentOwnershipType", "RowVersion");
            //DropColumn("dbo.InvestmentInterestPayout", "RowVersion");
            DropColumn("dbo.EntityTransaction", "RowVersion");
            DropColumn("dbo.Transaction", "RowVersion");
            DropColumn("dbo.PostedTransaction", "RowVersion");
            DropColumn("dbo.AccountPriorYear", "RowVersion");
            DropColumn("dbo.AccountGroup", "RowVersion");
            DropColumn("dbo.AccountBudget", "RowVersion");
            DropColumn("dbo.SegmentLevel", "RowVersion");
            DropColumn("dbo.Segment", "RowVersion");
            DropColumn("dbo.AccountSegment", "RowVersion");
            DropColumn("dbo.Account", "RowVersion");
            DropColumn("dbo.LedgerAccountYear", "RowVersion");
            DropColumn("dbo.LedgerAccount", "RowVersion");
            DropColumn("dbo.Ledger", "RowVersion");
            DropColumn("dbo.FiscalPeriod", "RowVersion");
            DropColumn("dbo.FiscalYear", "RowVersion");
            DropColumn("dbo.BusinessUnitFromTo", "RowVersion");
            DropColumn("dbo.BusinessUnit", "RowVersion");
            //DropColumn("dbo.Investment", "RowVersion");
            //DropColumn("dbo.InvestmentRelationship", "RowVersion");
            DropColumn("dbo.IncomeLevel", "RowVersion");
            DropColumn("dbo.Gender", "RowVersion");
            DropColumn("dbo.Ethnicity", "RowVersion");
            DropColumn("dbo.School", "RowVersion");
            DropColumn("dbo.Degree", "RowVersion");
            DropColumn("dbo.Education", "RowVersion");
            DropColumn("dbo.EducationLevel", "RowVersion");
            DropColumn("dbo.DoingBusinessAs", "RowVersion");
            DropColumn("dbo.Denomination", "RowVersion");
            DropColumn("dbo.ContactCategory", "RowVersion");
            DropColumn("dbo.ContactType", "RowVersion");
            DropColumn("dbo.ContactInfo", "RowVersion");
            DropColumn("dbo.TagGroup", "RowVersion");
            DropColumn("dbo.Tag", "RowVersion");
            DropColumn("dbo.ConstituentType", "RowVersion");
            DropColumn("dbo.ConstituentStatus", "RowVersion");
            DropColumn("dbo.AddressType", "RowVersion");
            DropColumn("dbo.RegionArea", "RowVersion");
            DropColumn("dbo.Region", "RowVersion");
            DropColumn("dbo.Address", "RowVersion");
            DropColumn("dbo.ConstituentAddress", "RowVersion");
            DropColumn("dbo.ClergyType", "RowVersion");
            DropColumn("dbo.ClergyStatus", "RowVersion");
            DropColumn("dbo.AlternateId", "RowVersion");
            DropColumn("dbo.NoteTopic", "RowVersion");
            DropColumn("dbo.NoteCode", "RowVersion");
            DropColumn("dbo.NoteContactMethod", "RowVersion");
            DropColumn("dbo.NoteCategory", "RowVersion");
            DropColumn("dbo.Note", "RowVersion");
            DropColumn("dbo.FileStorage", "RowVersion");
            DropColumn("dbo.Attachment", "RowVersion");
            CreateIndex("dbo.FiscalPeriod", new[] { "FiscalYearId", "PeriodNumber" }, unique: true, name: "IX_FiscalYear_PeriodNumber");
            AddForeignKey("dbo.FiscalPeriod", "FiscalYearId", "dbo.FiscalYear", "Id");
        }
    }
}
